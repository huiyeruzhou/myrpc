/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.4.8-dev */

#include "idl.pb.hpp"
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

PB_BIND(myrpc_Input, myrpc_Input, AUTO)


PB_BIND(myrpc_Output, myrpc_Output, AUTO)



/* Name table */
static const char* myrpc_LEDControl_method_names[] = {
    "/myrpc.LEDControl/setColor",
};
/* Method Registration */
myrpc_LEDControl_Service::myrpc_LEDControl_Service() {
       addMethod(new erpc::Method<myrpc_Input, myrpc_Output>(
               myrpc_LEDControl_method_names[0], myrpc_Input_fields, myrpc_Output_fields,
               [](Service *s, myrpc_Input *i, myrpc_Output *o)->rpc_status {return reinterpret_cast<myrpc_LEDControl_Service*>(s)->setColor(i, o);},
               this));
}
/* Server stub */
rpc_status myrpc_LEDControl_Service::setColor(myrpc_Input *req, myrpc_Output *rsp) {
    LOGW(myrpc_LEDControl_method_names[0], "Service Unimplemented!");
    return rpc_status::UnimplmentedService;
}


/* Client stub */
rpc_status myrpc_LEDControl_Client::setColor(myrpc_Input *req, myrpc_Output *rsp) {
    return performRequest(const_cast<char *>(myrpc_LEDControl_method_names[0]), myrpc_Input_fields, (void *) req, myrpc_Output_fields, (void *) rsp);
}

