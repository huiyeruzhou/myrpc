/*
 * You can write copyrights rules here. These rules will be copied into the outputs.
 */

/*
 * Generated by erpcgen 1.9.1 on Tue Mar 28 10:14:18 2023.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "rpc_client.h"
#include "port.h"
#include <err.h>
#include "codec_base.hpp"
extern "C"
{
#include "qaq.h"
}

#if 10901 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif

using namespace erpc;
using namespace std;



// aaa interface erpctest function client shim.
void aaaClient::erpctest(const char * str)
{
    rpc_status err = rpc_status::Success;



    // Get a new request.
    RequestContext request = createRequest(false);

    // Encode the request.
    Codec * codec = request.getCodec();

    if (codec == NULL)
    {
        err = rpc_status::MemoryError;
    }
    else
    {
        codec->startWriteMessage(kInvocationMessage, kaaa_service_id, kaaa_erpctest_id, request.getSequence());

        codec->writeString(strlen((const char*)str), (const char*)str);

        // Send message to server
        // Codec status is checked inside this function.
        performRequest(request);

        err = codec->getStatus();
    }

    // Dispose of the request.
    releaseRequest(request);

    // Invoke error handler callback function
    callErrorHandler(err, kaaa_erpctest_id);



    return;
}
